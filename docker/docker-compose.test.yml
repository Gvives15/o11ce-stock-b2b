services:
  # Test Database - PostgreSQL aislada para tests
  test-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=test_bff
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_bff"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network
    ports:
      - "5433:5432"  # Puerto diferente para no conflictar con DB principal

  # Test Redis - Cache aislado para tests
  test-redis:
    image: redis:7-alpine
    command: redis-server --appendonly no --maxmemory 128mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network
    ports:
      - "6380:6379"  # Puerto diferente para no conflictar con Redis principal

  # Test Runner - Contenedor para ejecutar tests
  test-runner:
    build:
      context: ..
      dockerfile: docker/web/Dockerfile
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.test
      - DATABASE_URL=postgres://test_user:test_password@test-db:5432/test_bff
      - REDIS_URL=redis://test-redis:6379/0
      - CELERY_BROKER_URL=redis://test-redis:6379/1
      - TESTING=true
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    volumes:
      - ..:/app
      - test_coverage:/app/htmlcov
    working_dir: /app
    networks:
      - test-network
    # No comando por defecto - se ejecutar√° manualmente
    profiles:
      - test

volumes:
  test_coverage:
    driver: local

networks:
  test-network:
    driver: bridge
    name: bff-test-network